versions pytest-7.4.0, python-3.10.4.final.0
cwd=/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests
args=('-k', 'test_abc.py', '--headless', '-v', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x1090dd240>
    pytest_plugin_registered [hook]
        plugin: <Session examples exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x1090dd240>
      pytest_metadata [hook]
          metadata: {'Python': '3.10.4', 'Platform': 'macOS-14.7.4-x86_64-i386-64bit', 'Packages': {'pytest': '7.4.0', 'pluggy': '1.2.0'}, 'Plugins': {'html': '2.0.1', 'pspec': '0.0.4', 'rerunfailures': '12.0', 'allure-pytest': '2.13.1', 'metadata': '3.0.0', 'ordering': '0.6', 'xdist': '3.3.1', 'cov': '4.0.0', 'forked': '1.6.0', 'seleniumbase': '4.17.1'}}
          config: <_pytest.config.Config object at 0x1090dd240>
      finish pytest_metadata --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_rerunfailures.XDistHooks object at 0x1091827a0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x10907e980>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x1090dd240>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_html.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_html/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_pspec.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_pspec/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_rerunfailures' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_rerunfailures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'allure_pytest.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/allure_pytest/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_metadata.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_metadata/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_ordering' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_ordering/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/xdist/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.looponfail' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/xdist/looponfail.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_cov/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_forked' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_forked/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'seleniumbase.plugins.pytest_plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/seleniumbase/plugins/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pytester' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pytester.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTestdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pytester_assertions' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pytester_assertions.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_rerunfailures.XDistHooks object at 0x1091827a0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x10a64f8e0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x10a64fa30>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x10907e980>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x1090dd240>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_html.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_html/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_pspec.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_pspec/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_rerunfailures' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_rerunfailures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'allure_pytest.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/allure_pytest/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_metadata.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_metadata/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_ordering' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_ordering/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/xdist/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.looponfail' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/xdist/looponfail.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_cov/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_forked' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_forked/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'seleniumbase.plugins.pytest_plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/seleniumbase/plugins/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pytester' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pytester.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTestdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pytester_assertions' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pytester_assertions.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_rerunfailures.XDistHooks object at 0x1091827a0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x10a64f8e0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x10a64fa30>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_pspec.plugin.PspecTerminalReporter object at 0x10a64ffa0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x10907e980>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x1090dd240>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_html.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_html/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_pspec.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_pspec/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_rerunfailures' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_rerunfailures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'allure_pytest.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/allure_pytest/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_metadata.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_metadata/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_ordering' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_ordering/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/xdist/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.looponfail' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/xdist/looponfail.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_cov/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_forked' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_forked/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'seleniumbase.plugins.pytest_plugin' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/seleniumbase/plugins/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pytester' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pytester.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTestdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pytester_assertions' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/pytester_assertions.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_rerunfailures.XDistHooks object at 0x1091827a0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x10a64f8e0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x10a64fa30>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_pspec.plugin.PspecTerminalReporter object at 0x10a64ffa0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x1091834c0>
          manager: <_pytest.config.PytestPluginManager object at 0x10907e980>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x1090dd240>
          start_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests
          startdir: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests
      finish pytest_report_header --> [['rootdir: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples', 'configfile: pytest.ini', 'plugins: html-2.0.1, pspec-0.0.4, rerunfailures-12.0, allure-pytest-2.13.1, metadata-3.0.0, ordering-0.6, xdist-3.3.1, cov-4.0.0, forked-1.6.0, seleniumbase-4.17.1'], "metadata: {'Python': '3.10.4', 'Platform': 'macOS-14.7.4-x86_64-i386-64bit', 'Packages': {'pytest': '7.4.0', 'pluggy': '1.2.0'}, 'Plugins': {'html': '2.0.1', 'pspec': '0.0.4', 'rerunfailures': '12.0', 'allure-pytest': '2.13.1', 'metadata': '3.0.0', 'ordering': '0.6', 'xdist': '3.3.1', 'cov': '4.0.0', 'forked': '1.6.0', 'seleniumbase': '4.17.1'}}", ['using: pytest-7.4.0', 'setuptools registered plugins:', '  pytest-html-2.0.1 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_html/plugin.py', '  pytest-pspec-0.0.4 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_pspec/plugin.py', '  pytest-rerunfailures-12.0 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_rerunfailures.py', '  allure-pytest-2.13.1 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/allure_pytest/plugin.py', '  pytest-metadata-3.0.0 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_metadata/plugin.py', '  pytest-ordering-0.6 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_ordering/__init__.py', '  pytest-xdist-3.3.1 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/xdist/plugin.py', '  pytest-xdist-3.3.1 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/xdist/looponfail.py', '  pytest-cov-4.0.0 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_cov/plugin.py', '  pytest-forked-1.6.0 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_forked/__init__.py', '  seleniumbase-4.17.1 at /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/seleniumbase/plugins/pytest_plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests'] [collection]
        pytest_collectstart [hook]
            collector: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (PosixPath('/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests'), []) [collection]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
                  path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
              finish pytest_pycollect_makemodule --> <Package nypl_tests> [hook]
            finish pytest_collect_file --> [<Package nypl_tests>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/__init__.py
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/__init__.py
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/__init__.py
                  path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/__init__.py
              finish pytest_pycollect_makemodule --> <Package examples> [hook]
            finish pytest_collect_file --> [<Package examples>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
                  path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/__init__.py
              finish pytest_pycollect_makemodule --> <Package nypl_tests> [hook]
            finish pytest_collect_file --> [<Package nypl_tests>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/154675a3-10e8-41ae-a485-19150f867420-result.json
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/154675a3-10e8-41ae-a485-19150f867420-result.json
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/154675a3-10e8-41ae-a485-19150f867420-result.json
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/154675a3-10e8-41ae-a485-19150f867420-result.json
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/32e5bf72-62fc-4236-a540-c61ef34949b6-container.json
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/32e5bf72-62fc-4236-a540-c61ef34949b6-container.json
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/32e5bf72-62fc-4236-a540-c61ef34949b6-container.json
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/32e5bf72-62fc-4236-a540-c61ef34949b6-container.json
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/archived_logs
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/archived_logs
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/nypl_tests_test_give.py__Give__test_give_1_0.png
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/nypl_tests_test_give.py__Give__test_give_1_0.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/nypl_tests_test_give.py__Give__test_give_1_0.png
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/nypl_tests_test_give.py__Give__test_give_1_0.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/style.css
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/style.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/style.css
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/style.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x1090dd240>
                collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/latest_logs
                path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/latest_logs
            finish pytest_ignore_collect --> None [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package nypl_tests> [collection]
      pytest_collectstart [hook]
          collector: <Package nypl_tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package nypl_tests>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/.DS_Store
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/.DS_Store
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/.DS_Store
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/.DS_Store
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/jmeter.log
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/jmeter.log
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/jmeter.log
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/jmeter.log
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/pytestdebug.log
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/pytestdebug.log
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/pytestdebug.log
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/pytestdebug.log
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/screenshot_before_assertion.png
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/screenshot_before_assertion.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/screenshot_before_assertion.png
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/screenshot_before_assertion.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_abc.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_abc.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_abc.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_abc.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_abc.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_abc.py
          finish pytest_pycollect_makemodule --> <Module test_abc.py> [hook]
        finish pytest_collect_file --> [<Module test_abc.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_burney.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_burney.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_burney.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_burney.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_burney.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_burney.py
          finish pytest_pycollect_makemodule --> <Module test_articles_burney.py> [hook]
        finish pytest_collect_file --> [<Module test_articles_burney.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_databases.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_databases.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_databases.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_databases.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_databases.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_databases.py
          finish pytest_pycollect_makemodule --> <Module test_articles_databases.py> [hook]
        finish pytest_collect_file --> [<Module test_articles_databases.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_homework.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_homework.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_homework.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_homework.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_homework.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_homework.py
          finish pytest_pycollect_makemodule --> <Module test_articles_homework.py> [hook]
        finish pytest_collect_file --> [<Module test_articles_homework.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_billy_rose.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_billy_rose.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_billy_rose.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_billy_rose.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_billy_rose.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_billy_rose.py
          finish pytest_pycollect_makemodule --> <Module test_billy_rose.py> [hook]
        finish pytest_collect_file --> [<Module test_billy_rose.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_best_books.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_best_books.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_best_books.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_best_books.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_best_books.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_best_books.py
          finish pytest_pycollect_makemodule --> <Module test_bl_best_books.py> [hook]
        finish pytest_collect_file --> [<Module test_bl_best_books.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_book_lists.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_book_lists.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_book_lists.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_book_lists.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_book_lists.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_book_lists.py
          finish pytest_pycollect_makemodule --> <Module test_bl_book_lists.py> [hook]
        finish pytest_collect_file --> [<Module test_bl_book_lists.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_staff_picks.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_staff_picks.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_staff_picks.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_staff_picks.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_staff_picks.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_staff_picks.py
          finish pytest_pycollect_makemodule --> <Module test_bl_staff_picks.py> [hook]
        finish pytest_collect_file --> [<Module test_bl_staff_picks.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog.py
          finish pytest_pycollect_makemodule --> <Module test_blog.py> [hook]
        finish pytest_collect_file --> [<Module test_blog.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_all.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_all.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_all.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_all.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_all.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_all.py
          finish pytest_pycollect_makemodule --> <Module test_blog_all.py> [hook]
        finish pytest_collect_file --> [<Module test_blog_all.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_channels.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_channels.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_channels.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_channels.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_channels.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_channels.py
          finish pytest_pycollect_makemodule --> <Module test_blog_channels.py> [hook]
        finish pytest_collect_file --> [<Module test_blog_channels.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_individual.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_individual.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_individual.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_individual.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_individual.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_individual.py
          finish pytest_pycollect_makemodule --> <Module test_blog_individual.py> [hook]
        finish pytest_collect_file --> [<Module test_blog_individual.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_campaigns.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_campaigns.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_campaigns.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_campaigns.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_campaigns.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_campaigns.py
          finish pytest_pycollect_makemodule --> <Module test_campaigns.py> [hook]
        finish pytest_collect_file --> [<Module test_campaigns.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_dxp_images.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_dxp_images.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_dxp_images.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_dxp_images.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_dxp_images.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_dxp_images.py
          finish pytest_pycollect_makemodule --> <Module test_dxp_images.py> [hook]
        finish pytest_collect_file --> [<Module test_dxp_images.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_exhibitions.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_exhibitions.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_exhibitions.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_exhibitions.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_exhibitions.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_exhibitions.py
          finish pytest_pycollect_makemodule --> <Module test_exhibitions.py> [hook]
        finish pytest_collect_file --> [<Module test_exhibitions.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_footer.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_footer.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_footer.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_footer.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_footer.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_footer.py
          finish pytest_pycollect_makemodule --> <Module test_footer.py> [hook]
        finish pytest_collect_file --> [<Module test_footer.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_give.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_give.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_give.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_give.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_give.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_give.py
          finish pytest_pycollect_makemodule --> <Module test_give.py> [hook]
        finish pytest_collect_file --> [<Module test_give.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_header.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_header.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_header.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_header.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_header.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_header.py
          finish pytest_pycollect_makemodule --> <Module test_header.py> [hook]
        finish pytest_collect_file --> [<Module test_header.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_home.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_home.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_home.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_home.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_home.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_home.py
          finish pytest_pycollect_makemodule --> <Module test_home.py> [hook]
        finish pytest_collect_file --> [<Module test_home.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca.py
          finish pytest_pycollect_makemodule --> <Module test_lca.py> [hook]
        finish pytest_collect_file --> [<Module test_lca.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_imperva.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_imperva.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_imperva.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_imperva.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_imperva.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_imperva.py
          finish pytest_pycollect_makemodule --> <Module test_lca_imperva.py> [hook]
        finish pytest_collect_file --> [<Module test_lca_imperva.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_locust.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_locust.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_locust.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_locust.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_locust.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_locust.py
          finish pytest_pycollect_makemodule --> <Module test_lca_locust.py> [hook]
        finish pytest_collect_file --> [<Module test_lca_locust.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_locations.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_locations.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_locations.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_locations.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_locations.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_locations.py
          finish pytest_pycollect_makemodule --> <Module test_locations.py> [hook]
        finish pytest_collect_file --> [<Module test_locations.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_posada.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_posada.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_posada.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_posada.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_posada.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_posada.py
          finish pytest_pycollect_makemodule --> <Module test_posada.py> [hook]
        finish pytest_collect_file --> [<Module test_posada.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press.py
          finish pytest_pycollect_makemodule --> <Module test_press.py> [hook]
        finish pytest_collect_file --> [<Module test_press.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press_individual.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press_individual.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press_individual.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press_individual.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press_individual.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press_individual.py
          finish pytest_pycollect_makemodule --> <Module test_press_individual.py> [hook]
        finish pytest_collect_file --> [<Module test_press_individual.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_request_visit.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_request_visit.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_request_visit.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_request_visit.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_request_visit.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_request_visit.py
          finish pytest_pycollect_makemodule --> <Module test_request_visit.py> [hook]
        finish pytest_collect_file --> [<Module test_request_visit.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research.py
          finish pytest_pycollect_makemodule --> <Module test_research.py> [hook]
        finish pytest_collect_file --> [<Module test_research.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research_support.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research_support.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research_support.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research_support.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research_support.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research_support.py
          finish pytest_pycollect_makemodule --> <Module test_research_support.py> [hook]
        finish pytest_collect_file --> [<Module test_research_support.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_schwarzman.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_schwarzman.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_schwarzman.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_schwarzman.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_schwarzman.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_schwarzman.py
          finish pytest_pycollect_makemodule --> <Module test_schwarzman.py> [hook]
        finish pytest_collect_file --> [<Module test_schwarzman.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_adults.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_adults.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_adults.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_adults.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_adults.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_adults.py
          finish pytest_pycollect_makemodule --> <Module test_sf_adults.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_adults.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_books.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_books.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_books.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_books.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_books.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_books.py
          finish pytest_pycollect_makemodule --> <Module test_sf_books.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_books.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_early_literacy.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_early_literacy.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_early_literacy.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_early_literacy.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_early_literacy.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_early_literacy.py
          finish pytest_pycollect_makemodule --> <Module test_sf_early_literacy.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_early_literacy.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_education.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_education.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_education.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_education.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_education.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_education.py
          finish pytest_pycollect_makemodule --> <Module test_sf_education.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_education.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_educators.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_educators.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_educators.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_educators.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_educators.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_educators.py
          finish pytest_pycollect_makemodule --> <Module test_sf_educators.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_educators.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_events.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_events.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_events.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_events.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_events.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_events.py
          finish pytest_pycollect_makemodule --> <Module test_sf_events.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_events.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_kids.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_kids.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_kids.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_kids.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_kids.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_kids.py
          finish pytest_pycollect_makemodule --> <Module test_sf_kids.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_kids.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_new_arrivals.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_new_arrivals.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_new_arrivals.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_new_arrivals.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_new_arrivals.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_new_arrivals.py
          finish pytest_pycollect_makemodule --> <Module test_sf_new_arrivals.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_new_arrivals.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_teens.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_teens.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_teens.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_teens.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_teens.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_teens.py
          finish pytest_pycollect_makemodule --> <Module test_sf_teens.py> [hook]
        finish pytest_collect_file --> [<Module test_sf_teens.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl.py
          finish pytest_pycollect_makemodule --> <Module test_snfl.py> [hook]
        finish pytest_collect_file --> [<Module test_snfl.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl_teen.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl_teen.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl_teen.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl_teen.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl_teen.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl_teen.py
          finish pytest_pycollect_makemodule --> <Module test_snfl_teen.py> [hook]
        finish pytest_collect_file --> [<Module test_snfl_teen.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_speakout.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_speakout.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_speakout.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_speakout.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_speakout.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_speakout.py
          finish pytest_pycollect_makemodule --> <Module test_speakout.py> [hook]
        finish pytest_collect_file --> [<Module test_speakout.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_world_literature.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_world_literature.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package nypl_tests>
            file_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_world_literature.py
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_world_literature.py
          pytest_pycollect_makemodule [hook]
              parent: <Package nypl_tests>
              module_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_world_literature.py
              path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_world_literature.py
          finish pytest_pycollect_makemodule --> <Module test_world_literature.py> [hook]
        finish pytest_collect_file --> [<Module test_world_literature.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/154675a3-10e8-41ae-a485-19150f867420-result.json
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/154675a3-10e8-41ae-a485-19150f867420-result.json
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/32e5bf72-62fc-4236-a540-c61ef34949b6-container.json
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/allure_results/32e5bf72-62fc-4236-a540-c61ef34949b6-container.json
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/archived_logs
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/archived_logs
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/nypl_tests_test_give.py__Give__test_give_1_0.png
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/nypl_tests_test_give.py__Give__test_give_1_0.png
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/style.css
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/assets/style.css
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            collection_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/latest_logs
            path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/latest_logs
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/__init__.py' lenresult=43 outcome='passed'> [hook]
    genitems <Module test_abc.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_abc.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_abc.py>
      early skip of rewriting module: examples [assertion]
      find_module called for: examples.nypl_tests [assertion]
      find_module called for: examples.nypl_tests.test_abc [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_abc.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_abc.py [assertion]
      early skip of rewriting module: examples.nypl_utility [assertion]
      early skip of rewriting module: examples.nypl_utility.utility [assertion]
      early skip of rewriting module: dotenv [assertion]
      early skip of rewriting module: dotenv.main [assertion]
      early skip of rewriting module: dotenv.parser [assertion]
      early skip of rewriting module: dotenv.variables [assertion]
      early skip of rewriting module: examples.nypl_pages [assertion]
      early skip of rewriting module: examples.nypl_pages.page_header [assertion]
      early skip of rewriting module: examples.nypl_pages.page_schwarzman [assertion]
      early skip of rewriting module: examples.nypl_pages.page_give [assertion]
      early skip of rewriting module: examples.nypl_pages.page_home [assertion]
      early skip of rewriting module: examples.nypl_pages.page_blog [assertion]
      early skip of rewriting module: examples.nypl_pages.page_blog_all [assertion]
      early skip of rewriting module: examples.nypl_pages.page_bl_book_lists [assertion]
      early skip of rewriting module: examples.nypl_pages.page_campaigns [assertion]
      early skip of rewriting module: examples.nypl_pages.page_exhibitions [assertion]
      early skip of rewriting module: examples.nypl_pages.page_footer [assertion]
      early skip of rewriting module: examples.nypl_pages.page_locations [assertion]
      early skip of rewriting module: examples.nypl_pages.page_articles_databases [assertion]
      early skip of rewriting module: examples.nypl_pages.page_research [assertion]
      early skip of rewriting module: examples.nypl_pages.page_research_support [assertion]
      early skip of rewriting module: examples.nypl_pages.page_snfl [assertion]
      early skip of rewriting module: examples.nypl_pages.page_snfl_teen [assertion]
      early skip of rewriting module: examples.nypl_pages.page_billy_rose [assertion]
      early skip of rewriting module: examples.nypl_pages.page_request_visit [assertion]
      early skip of rewriting module: examples.nypl_pages.page_posada [assertion]
      early skip of rewriting module: examples.nypl_pages.page_world_litetature [assertion]
      early skip of rewriting module: examples.nypl_pages.page_articles_burney [assertion]
      early skip of rewriting module: examples.nypl_pages.page_articles_homework [assertion]
      early skip of rewriting module: examples.nypl_pages.page_blog_channels [assertion]
      early skip of rewriting module: examples.nypl_pages.page_blog_individual [assertion]
      early skip of rewriting module: examples.nypl_pages.page_press [assertion]
      early skip of rewriting module: examples.nypl_pages.page_press_individual [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_education [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_early_literacy [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_teens [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_kids [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_adults [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_educators [assertion]
      early skip of rewriting module: examples.nypl_pages.page_bl_best_books [assertion]
      early skip of rewriting module: examples.nypl_pages.page_bl_staff_picks [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_events [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_books [assertion]
      early skip of rewriting module: examples.nypl_pages.page_lca [assertion]
      early skip of rewriting module: examples.nypl_pages.page_sf_new_arrivals [assertion]
      early skip of rewriting module: examples.nypl_pages.page_speakout [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_abc.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_abc.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_abc.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_abc.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_abc.py>
            name: __warningregistry__
            obj: {'version': 27}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_abc.py>
            name: Abc
            obj: <class 'examples.nypl_tests.test_abc.Abc'>
        finish pytest_pycollect_makeitem --> <UnitTestCase Abc> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_abc.py' lenresult=2 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_abc.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_abc.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase Abc> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase Abc>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase Abc>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_abc.py::Abc' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_abc> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_abc>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_abc.py::Abc' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_abc.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_articles_burney.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_articles_burney.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_articles_burney.py>
      find_module called for: examples.nypl_tests.test_articles_burney [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_burney.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_burney.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_burney.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_burney.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_burney.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_burney.py>
            name: ArticlesBurneyPage
            obj: <class 'examples.nypl_pages.page_articles_burney.ArticlesBurneyPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ArticlesBurneyPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_burney.py>
            name: requests
            obj: <module 'requests' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/requests/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_burney.py>
            name: ArticlesBurneyTest
            obj: <class 'examples.nypl_tests.test_articles_burney.ArticlesBurneyTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ArticlesBurneyTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_burney.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_burney.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_burney.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ArticlesBurneyPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ArticlesBurneyPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ArticlesBurneyPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_burney.py::ArticlesBurneyPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_burney.py::ArticlesBurneyPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ArticlesBurneyTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ArticlesBurneyTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ArticlesBurneyTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_burney.py::ArticlesBurneyTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_articles_burney_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_articles_burney_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_burney.py::ArticlesBurneyTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_burney.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_articles_databases.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_articles_databases.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_articles_databases.py>
      find_module called for: examples.nypl_tests.test_articles_databases [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_databases.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_databases.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_databases.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_databases.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_databases.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_databases.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_databases.py>
            name: ArticlesDatabasesPage
            obj: <class 'examples.nypl_pages.page_articles_databases.ArticlesDatabasesPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ArticlesDatabasesPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_databases.py>
            name: requests
            obj: <module 'requests' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/requests/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_databases.py>
            name: ArticlesDatabasesTest
            obj: <class 'examples.nypl_tests.test_articles_databases.ArticlesDatabasesTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ArticlesDatabasesTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_databases.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_databases.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_databases.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ArticlesDatabasesPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ArticlesDatabasesPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ArticlesDatabasesPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_databases.py::ArticlesDatabasesPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_databases.py::ArticlesDatabasesPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ArticlesDatabasesTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ArticlesDatabasesTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ArticlesDatabasesTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_databases.py::ArticlesDatabasesTest' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_articles_databases_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_articles_databases_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_articles_databases_search> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_articles_databases_search>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_databases.py::ArticlesDatabasesTest' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_databases.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_articles_homework.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_articles_homework.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_articles_homework.py>
      find_module called for: examples.nypl_tests.test_articles_homework [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_homework.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_articles_homework.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_homework.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_homework.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_homework.py>
            name: requests
            obj: <module 'requests' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/requests/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_homework.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_homework.py>
            name: ArticlesHomeworkPage
            obj: <class 'examples.nypl_pages.page_articles_homework.ArticlesHomeworkPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ArticlesHomeworkPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_homework.py>
            name: re
            obj: <module 're' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/re.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_articles_homework.py>
            name: ArticlesHomeworkTest
            obj: <class 'examples.nypl_tests.test_articles_homework.ArticlesHomeworkTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ArticlesHomeworkTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_homework.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_homework.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_homework.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ArticlesHomeworkPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ArticlesHomeworkPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ArticlesHomeworkPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_homework.py::ArticlesHomeworkPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_homework.py::ArticlesHomeworkPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ArticlesHomeworkTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ArticlesHomeworkTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ArticlesHomeworkTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_articles_homework.py::ArticlesHomeworkTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_articles_homework_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_articles_homework_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_homework.py::ArticlesHomeworkTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_articles_homework.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_billy_rose.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_billy_rose.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_billy_rose.py>
      find_module called for: examples.nypl_tests.test_billy_rose [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_billy_rose.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_billy_rose.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_billy_rose.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_billy_rose.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_billy_rose.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_billy_rose.py>
            name: BillyRosePage
            obj: <class 'examples.nypl_pages.page_billy_rose.BillyRosePage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BillyRosePage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_billy_rose.py>
            name: BillyRoseTest
            obj: <class 'examples.nypl_tests.test_billy_rose.BillyRoseTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BillyRoseTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_billy_rose.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_billy_rose.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_billy_rose.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BillyRosePage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BillyRosePage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BillyRosePage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_billy_rose.py::BillyRosePage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_billy_rose.py::BillyRosePage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BillyRoseTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BillyRoseTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BillyRoseTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_billy_rose.py::BillyRoseTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_billy_rose_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_billy_rose_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_billy_rose.py::BillyRoseTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_billy_rose.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_bl_best_books.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_bl_best_books.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_bl_best_books.py>
      find_module called for: examples.nypl_tests.test_bl_best_books [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_best_books.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_best_books.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_best_books.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_best_books.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_best_books.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_best_books.py>
            name: BestBooksPage
            obj: <class 'examples.nypl_pages.page_bl_best_books.BestBooksPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BestBooksPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_best_books.py>
            name: random
            obj: <module 'random' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/random.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_best_books.py>
            name: BookListsBestBooks
            obj: <class 'examples.nypl_tests.test_bl_best_books.BookListsBestBooks'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BookListsBestBooks> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_best_books.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_best_books.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_best_books.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BestBooksPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BestBooksPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BestBooksPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_best_books.py::BestBooksPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_best_books.py::BestBooksPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BookListsBestBooks> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BookListsBestBooks>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BookListsBestBooks>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_best_books.py::BookListsBestBooks' lenresult=4 outcome='passed'> [hook]
    genitems <TestCaseFunction test_best_books_adults> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_best_books_adults>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_best_books_kids> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_best_books_kids>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_best_books_teens> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_best_books_teens>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_best_books_year_dropdown> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_best_books_year_dropdown>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_best_books.py::BookListsBestBooks' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_best_books.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_bl_book_lists.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_bl_book_lists.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_bl_book_lists.py>
      find_module called for: examples.nypl_tests.test_bl_book_lists [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_book_lists.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_book_lists.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_book_lists.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_book_lists.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_book_lists.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_book_lists.py>
            name: BookListsPage
            obj: <class 'examples.nypl_pages.page_bl_book_lists.BookListsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BookListsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_book_lists.py>
            name: BookLists125
            obj: <class 'examples.nypl_tests.test_bl_book_lists.BookLists125'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BookLists125> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_book_lists.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_book_lists.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_book_lists.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BookListsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BookListsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BookListsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_book_lists.py::BookListsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_book_lists.py::BookListsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BookLists125> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BookLists125>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BookLists125>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_book_lists.py::BookLists125' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction test_125_adults> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_125_adults>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_125_kids> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_125_kids>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_125_teens> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_125_teens>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_book_lists.py::BookLists125' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_book_lists.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_bl_staff_picks.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_bl_staff_picks.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_bl_staff_picks.py>
      find_module called for: examples.nypl_tests.test_bl_staff_picks [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_staff_picks.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_bl_staff_picks.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_staff_picks.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_staff_picks.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_staff_picks.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_staff_picks.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_staff_picks.py>
            name: StaffPicksPage
            obj: <class 'examples.nypl_pages.page_bl_staff_picks.StaffPicksPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase StaffPicksPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_staff_picks.py>
            name: random
            obj: <module 'random' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/random.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_bl_staff_picks.py>
            name: StaffPicks
            obj: <class 'examples.nypl_tests.test_bl_staff_picks.StaffPicks'>
        finish pytest_pycollect_makeitem --> <UnitTestCase StaffPicks> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_staff_picks.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_staff_picks.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_staff_picks.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase StaffPicksPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase StaffPicksPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase StaffPicksPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_staff_picks.py::StaffPicksPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_staff_picks.py::StaffPicksPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase StaffPicks> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase StaffPicks>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase StaffPicks>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_bl_staff_picks.py::StaffPicks' lenresult=5 outcome='passed'> [hook]
    genitems <TestCaseFunction test_staff_picks_adults> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_staff_picks_adults>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_staff_picks_dropdown> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_staff_picks_dropdown>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_staff_picks_kids> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_staff_picks_kids>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_staff_picks_seasons> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_staff_picks_seasons>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_staff_picks_teens> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_staff_picks_teens>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_staff_picks.py::StaffPicks' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_bl_staff_picks.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_blog.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_blog.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_blog.py>
      find_module called for: examples.nypl_tests.test_blog [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog.py>
            name: BlogPage
            obj: <class 'examples.nypl_pages.page_blog.BlogPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BlogPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog.py>
            name: time
            obj: <module 'time' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog.py>
            name: NoSuchElementException
            obj: <class 'selenium.common.exceptions.NoSuchElementException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog.py>
            name: BlogTests
            obj: <class 'examples.nypl_tests.test_blog.BlogTests'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BlogTests> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BlogPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BlogPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BlogPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog.py::BlogPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog.py::BlogPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BlogTests> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BlogTests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BlogTests>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog.py::BlogTests' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction test_blog_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_blog_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_featured_posts> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_featured_posts>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_right_side_tab> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_right_side_tab>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog.py::BlogTests' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_blog_all.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_blog_all.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_blog_all.py>
      find_module called for: examples.nypl_tests.test_blog_all [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_all.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_all.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_all.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_all.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_all.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_all.py>
            name: BlogAllPage
            obj: <class 'examples.nypl_pages.page_blog_all.BlogAllPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BlogAllPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_all.py>
            name: random
            obj: <module 'random' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/random.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_all.py>
            name: base_url
            obj: https://www.nypl.org/blog/all
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_all.py>
            name: BlogAllTests
            obj: <class 'examples.nypl_tests.test_blog_all.BlogAllTests'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BlogAllTests> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_all.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_all.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_all.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BlogAllPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BlogAllPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BlogAllPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_all.py::BlogAllPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_all.py::BlogAllPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BlogAllTests> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BlogAllTests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BlogAllTests>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_all.py::BlogAllTests' lenresult=6 outcome='passed'> [hook]
    genitems <TestCaseFunction test_audience_filter> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_audience_filter>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_blog_all_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_blog_all_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_channels_filter> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_channels_filter>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_divisions_filter> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_divisions_filter>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_libraries_filter> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_libraries_filter>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_subjects_filter> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_subjects_filter>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_all.py::BlogAllTests' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_all.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_blog_channels.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_blog_channels.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_blog_channels.py>
      find_module called for: examples.nypl_tests.test_blog_channels [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_channels.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_channels.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_channels.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_channels.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_channels.py>
            name: BlogChannelsPage
            obj: <class 'examples.nypl_pages.page_blog_channels.BlogChannelsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BlogChannelsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_channels.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_channels.py>
            name: BlogChannelsTest
            obj: <class 'examples.nypl_tests.test_blog_channels.BlogChannelsTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BlogChannelsTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_channels.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase BlogChannelsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BlogChannelsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BlogChannelsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_channels.py::BlogChannelsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_channels.py::BlogChannelsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_channels.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_channels.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BlogChannelsTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BlogChannelsTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BlogChannelsTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_channels.py::BlogChannelsTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_blog_channels> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_blog_channels>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_channels.py::BlogChannelsTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_channels.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_blog_individual.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_blog_individual.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_blog_individual.py>
      find_module called for: examples.nypl_tests.test_blog_individual [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_individual.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_blog_individual.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_individual.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_individual.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_individual.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_individual.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_individual.py>
            name: BlogIndividualPage
            obj: <class 'examples.nypl_pages.page_blog_individual.BlogIndividualPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BlogIndividualPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_individual.py>
            name: random
            obj: <module 'random' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/random.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_blog_individual.py>
            name: BlogIndividualTest
            obj: <class 'examples.nypl_tests.test_blog_individual.BlogIndividualTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BlogIndividualTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_individual.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_individual.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_individual.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BlogIndividualPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BlogIndividualPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BlogIndividualPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_individual.py::BlogIndividualPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_individual.py::BlogIndividualPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BlogIndividualTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BlogIndividualTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BlogIndividualTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_blog_individual.py::BlogIndividualTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_blog_individual> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_blog_individual>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_individual.py::BlogIndividualTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_blog_individual.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_campaigns.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_campaigns.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_campaigns.py>
      find_module called for: examples.nypl_tests.test_campaigns [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_campaigns.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_campaigns.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_campaigns.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_campaigns.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_campaigns.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_campaigns.py>
            name: CampaignsPage
            obj: <class 'examples.nypl_pages.page_campaigns.CampaignsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase CampaignsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_campaigns.py>
            name: Campaigns
            obj: <class 'examples.nypl_tests.test_campaigns.Campaigns'>
        finish pytest_pycollect_makeitem --> <UnitTestCase Campaigns> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_campaigns.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_campaigns.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_campaigns.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase CampaignsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase CampaignsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase CampaignsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_campaigns.py::CampaignsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_campaigns.py::CampaignsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase Campaigns> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase Campaigns>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase Campaigns>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_campaigns.py::Campaigns' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction test_125_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_125_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_125_timeline> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_125_timeline>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_125_topCheckouts> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_125_topCheckouts>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_campaigns.py::Campaigns' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_campaigns.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_dxp_images.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_dxp_images.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_dxp_images.py>
      find_module called for: examples.nypl_tests.test_dxp_images [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_dxp_images.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_dxp_images.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_dxp_images.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_dxp_images.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_dxp_images.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_dxp_images.py>
            name: requests
            obj: <module 'requests' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/requests/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_dxp_images.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_dxp_images.py>
            name: FrontendImagesAndLinks
            obj: <class 'examples.nypl_tests.test_dxp_images.FrontendImagesAndLinks'>
        finish pytest_pycollect_makeitem --> <UnitTestCase FrontendImagesAndLinks> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_dxp_images.py' lenresult=2 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_dxp_images.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_dxp_images.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase FrontendImagesAndLinks> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase FrontendImagesAndLinks>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase FrontendImagesAndLinks>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_dxp_images.py::FrontendImagesAndLinks' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_dxp_pages> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_dxp_pages>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_links> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_links>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_dxp_images.py::FrontendImagesAndLinks' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_dxp_images.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_exhibitions.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_exhibitions.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_exhibitions.py>
      find_module called for: examples.nypl_tests.test_exhibitions [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_exhibitions.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_exhibitions.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_exhibitions.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_exhibitions.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_exhibitions.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_exhibitions.py>
            name: ExhibitionsPage
            obj: <class 'examples.nypl_pages.page_exhibitions.ExhibitionsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ExhibitionsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_exhibitions.py>
            name: Exhibitions
            obj: <class 'examples.nypl_tests.test_exhibitions.Exhibitions'>
        finish pytest_pycollect_makeitem --> <UnitTestCase Exhibitions> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_exhibitions.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_exhibitions.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_exhibitions.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ExhibitionsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ExhibitionsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ExhibitionsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_exhibitions.py::ExhibitionsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_exhibitions.py::ExhibitionsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase Exhibitions> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase Exhibitions>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase Exhibitions>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_exhibitions.py::Exhibitions' lenresult=6 outcome='passed'> [hook]
    genitems <TestCaseFunction test_exhibitions_archived_exhibition_resources> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_exhibitions_archived_exhibition_resources>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_exhibitions_community_showcases> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_exhibitions_community_showcases>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_exhibitions_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_exhibitions_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_exhibitions_online> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_exhibitions_online>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_exhibitions_past> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_exhibitions_past>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_exhibitions_upcoming> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_exhibitions_upcoming>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_exhibitions.py::Exhibitions' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_exhibitions.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_footer.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_footer.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_footer.py>
      find_module called for: examples.nypl_tests.test_footer [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_footer.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_footer.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_footer.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_footer.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_footer.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_footer.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_footer.py>
            name: FooterPage
            obj: <class 'examples.nypl_pages.page_footer.FooterPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase FooterPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_footer.py>
            name: FooterTest
            obj: <class 'examples.nypl_tests.test_footer.FooterTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase FooterTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_footer.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_footer.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_footer.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase FooterPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase FooterPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase FooterPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_footer.py::FooterPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_footer.py::FooterPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase FooterTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase FooterTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase FooterTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_footer.py::FooterTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_footer> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_footer>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_footer.py::FooterTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_footer.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_give.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_give.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_give.py>
      find_module called for: examples.nypl_tests.test_give [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_give.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_give.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_give.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_give.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_give.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_give.py>
            name: GivePage
            obj: <class 'examples.nypl_pages.page_give.GivePage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase GivePage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_give.py>
            name: Give
            obj: <class 'examples.nypl_tests.test_give.Give'>
        finish pytest_pycollect_makeitem --> <UnitTestCase Give> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_give.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_give.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_give.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase GivePage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase GivePage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase GivePage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_give.py::GivePage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_give.py::GivePage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase Give> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase Give>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase Give>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_give.py::Give' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_give> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_give>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_give.py::Give' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_give.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_header.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_header.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_header.py>
      find_module called for: examples.nypl_tests.test_header [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_header.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_header.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: os
            obj: <module 'os' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/os.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: load_dotenv
            obj: <function load_dotenv at 0x10a721480>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: NoSuchElementException
            obj: <class 'selenium.common.exceptions.NoSuchElementException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: Keys
            obj: <class 'selenium.webdriver.common.keys.Keys'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: HeaderPage
            obj: <class 'examples.nypl_pages.page_header.HeaderPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase HeaderPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_header.py>
            name: HeaderTest
            obj: <class 'examples.nypl_tests.test_header.HeaderTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase HeaderTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_header.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_header.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_header.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase HeaderPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase HeaderPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase HeaderPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_header.py::HeaderPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_header.py::HeaderPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase HeaderTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase HeaderTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase HeaderTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_header.py::HeaderTest' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction test_header_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_header_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_login_catalog> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_login_catalog>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_research_catalog> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_research_catalog>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_header.py::HeaderTest' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_header.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_home.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_home.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_home.py>
      find_module called for: examples.nypl_tests.test_home [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_home.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_home.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_home.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_home.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_home.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_home.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_home.py>
            name: HomePage
            obj: <class 'examples.nypl_pages.page_home.HomePage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase HomePage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_home.py>
            name: HomePageTest
            obj: <class 'examples.nypl_tests.test_home.HomePageTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase HomePageTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_home.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_home.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_home.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase HomePage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase HomePage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase HomePage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_home.py::HomePage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_home.py::HomePage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase HomePageTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase HomePageTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase HomePageTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_home.py::HomePageTest' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_home_page> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_home_page>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_slider> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_slider>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_home.py::HomePageTest' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_home.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_lca.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_lca.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_lca.py>
      find_module called for: examples.nypl_tests.test_lca [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: os
            obj: <module 'os' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/os.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: uuid
            obj: <module 'uuid' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: load_dotenv
            obj: <function load_dotenv at 0x10a721480>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: LibraryCardPage
            obj: <class 'examples.nypl_pages.page_lca.LibraryCardPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase LibraryCardPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: NoSuchElementException
            obj: <class 'seleniumbase.common.exceptions.NoSuchElementException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: __warningregistry__
            obj: {'version': 27}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca.py>
            name: LibraryCard
            obj: <class 'examples.nypl_tests.test_lca.LibraryCard'>
        finish pytest_pycollect_makeitem --> <UnitTestCase LibraryCard> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase LibraryCardPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase LibraryCardPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase LibraryCardPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca.py::LibraryCardPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca.py::LibraryCardPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase LibraryCard> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase LibraryCard>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase LibraryCard>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca.py::LibraryCard' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_library_card_new> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_library_card_new>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca.py::LibraryCard' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_lca_imperva.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_lca_imperva.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_lca_imperva.py>
      find_module called for: examples.nypl_tests.test_lca_imperva [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_imperva.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_imperva.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: os
            obj: <module 'os' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/os.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: uuid
            obj: <module 'uuid' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: load_dotenv
            obj: <function load_dotenv at 0x10a721480>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: LibraryCardPage
            obj: <class 'examples.nypl_pages.page_lca.LibraryCardPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase LibraryCardPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: NoSuchElementException
            obj: <class 'seleniumbase.common.exceptions.NoSuchElementException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: __warningregistry__
            obj: {'version': 27}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lca_imperva.py>
            name: LibraryCard
            obj: <class 'examples.nypl_tests.test_lca_imperva.LibraryCard'>
        finish pytest_pycollect_makeitem --> <UnitTestCase LibraryCard> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca_imperva.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca_imperva.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca_imperva.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase LibraryCardPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase LibraryCardPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase LibraryCardPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca_imperva.py::LibraryCardPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca_imperva.py::LibraryCardPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase LibraryCard> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase LibraryCard>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase LibraryCard>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca_imperva.py::LibraryCard' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_library_card_new> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_library_card_new>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca_imperva.py::LibraryCard' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca_imperva.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_lca_locust.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_lca_locust.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_lca_locust.py>
      find_module called for: examples.nypl_tests.test_lca_locust [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_locust.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_lca_locust.py [assertion]
      early skip of rewriting module: locust [assertion]
      early skip of rewriting module: gevent [assertion]
      early skip of rewriting module: gevent._config [assertion]
      early skip of rewriting module: gevent._compat [assertion]
      early skip of rewriting module: gevent.libev [assertion]
      early skip of rewriting module: gevent.libev.corecext [assertion]
      early skip of rewriting module: gevent.exceptions [assertion]
      early skip of rewriting module: greenlet [assertion]
      early skip of rewriting module: greenlet._greenlet [assertion]
      early skip of rewriting module: zope.interface [assertion]
      early skip of rewriting module: zope.interface.interface [assertion]
      early skip of rewriting module: zope.interface.ro [assertion]
      early skip of rewriting module: zope.interface._compat [assertion]
      early skip of rewriting module: zope.interface.exceptions [assertion]
      early skip of rewriting module: zope.interface._zope_interface_coptimizations [assertion]
      early skip of rewriting module: zope.interface.declarations [assertion]
      early skip of rewriting module: zope.interface.interfaces [assertion]
      early skip of rewriting module: gevent._interfaces [assertion]
      early skip of rewriting module: zope.schema [assertion]
      early skip of rewriting module: gevent._hub_local [assertion]
      early skip of rewriting module: gevent._util [assertion]
      early skip of rewriting module: gevent._gevent_c_hub_local [assertion]
      early skip of rewriting module: gevent._gevent_c_greenlet_primitives [assertion]
      early skip of rewriting module: gevent._hub_primitives [assertion]
      early skip of rewriting module: gevent._greenlet_primitives [assertion]
      early skip of rewriting module: gevent._waiter [assertion]
      early skip of rewriting module: gevent._gevent_c_waiter [assertion]
      early skip of rewriting module: gevent.timeout [assertion]
      early skip of rewriting module: gevent._gevent_c_hub_primitives [assertion]
      early skip of rewriting module: gevent.greenlet [assertion]
      early skip of rewriting module: gevent._tblib [assertion]
      early skip of rewriting module: gevent._gevent_cgreenlet [assertion]
      early skip of rewriting module: gevent._gevent_c_ident [assertion]
      early skip of rewriting module: gevent.hub [assertion]
      early skip of rewriting module: gevent._ident [assertion]
      early skip of rewriting module: gevent.os [assertion]
      early skip of rewriting module: gevent.monkey [assertion]
      early skip of rewriting module: gevent.monkey._errors [assertion]
      early skip of rewriting module: gevent.monkey._util [assertion]
      early skip of rewriting module: gevent.monkey._state [assertion]
      early skip of rewriting module: gevent.monkey.api [assertion]
      early skip of rewriting module: gevent.queue [assertion]
      early skip of rewriting module: gevent._gevent_cqueue [assertion]
      early skip of rewriting module: gevent._gevent_c_abstract_linkable [assertion]
      early skip of rewriting module: gevent._gevent_cevent [assertion]
      early skip of rewriting module: gevent._abstract_linkable [assertion]
      early skip of rewriting module: gevent.events [assertion]
      early skip of rewriting module: zope.event [assertion]
      early skip of rewriting module: gevent.monkey._patch_thread_lt313 [assertion]
      early skip of rewriting module: gevent.monkey._patch_thread_common [assertion]
      early skip of rewriting module: gevent.thread [assertion]
      early skip of rewriting module: gevent.lock [assertion]
      early skip of rewriting module: gevent._semaphore [assertion]
      early skip of rewriting module: gevent._gevent_c_semaphore [assertion]
      early skip of rewriting module: gevent.local [assertion]
      early skip of rewriting module: gevent._gevent_clocal [assertion]
      early skip of rewriting module: gevent.threading [assertion]
      early skip of rewriting module: gevent.event [assertion]
      early skip of rewriting module: _threading_local [assertion]
      early skip of rewriting module: gevent.time [assertion]
      early skip of rewriting module: gevent.socket [assertion]
      early skip of rewriting module: gevent._socket3 [assertion]
      early skip of rewriting module: gevent._socketcommon [assertion]
      early skip of rewriting module: gevent.select [assertion]
      early skip of rewriting module: gevent.selectors [assertion]
      early skip of rewriting module: gevent.ssl [assertion]
      early skip of rewriting module: gevent.subprocess [assertion]
      early skip of rewriting module: gevent.signal [assertion]
      early skip of rewriting module: locust._version [assertion]
      early skip of rewriting module: locust.contrib [assertion]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_lca_locust.py' lenresult=0 outcome='failed'> [hook]
      pytest_exception_interact [hook]
          node: <Module test_lca_locust.py>
          call: <CallInfo when='collect' excinfo=<ExceptionInfo RuntimeError('cannot release un-acquired lock') tblen=13>>
          report: <CollectReport 'nypl_tests/test_lca_locust.py' lenresult=0 outcome='failed'>
      finish pytest_exception_interact --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_lca_locust.py' lenresult=0 outcome='failed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_locations.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_locations.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_locations.py>
      find_module called for: examples.nypl_tests.test_locations [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_locations.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_locations.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: InvalidSessionIdException
            obj: <class 'selenium.common.exceptions.InvalidSessionIdException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: NoSuchElementException
            obj: <class 'seleniumbase.common.exceptions.NoSuchElementException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: LocationsPage
            obj: <class 'examples.nypl_pages.page_locations.LocationsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase LocationsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: randrange
            obj: <bound method Random.randrange of <random.Random object at 0x7fab628b9810>>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: time
            obj: <module 'time' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: requests
            obj: <module 'requests' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/requests/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: re
            obj: <module 're' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/re.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: TextNotVisibleException
            obj: <class 'seleniumbase.common.exceptions.TextNotVisibleException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_locations.py>
            name: Locations
            obj: <class 'examples.nypl_tests.test_locations.Locations'>
        finish pytest_pycollect_makeitem --> <UnitTestCase Locations> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_locations.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_locations.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_locations.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase LocationsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase LocationsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase LocationsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_locations.py::LocationsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_locations.py::LocationsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase Locations> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase Locations>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase Locations>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_locations.py::Locations' lenresult=14 outcome='passed'> [hook]
    genitems <TestCaseFunction test_accessibility_full> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_accessibility_full>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_accessibility_non> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_accessibility_non>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_accessibility_partial> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_accessibility_partial>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_amenities> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_amenities>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_locations_borough> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_locations_borough>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_locations_filters> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_locations_filters>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_locations_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_locations_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_locations_search_functionality> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_locations_search_functionality>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_media_types> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_media_types>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_open_hours_1> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_open_hours_1>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_open_hours_2> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_open_hours_2>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_open_hours_3> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_open_hours_3>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_open_hours_4> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_open_hours_4>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_subject_specialties> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_subject_specialties>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_locations.py::Locations' lenresult=14 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_locations.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_posada.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_posada.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_posada.py>
      find_module called for: examples.nypl_tests.test_posada [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_posada.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_posada.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_posada.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_posada.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_posada.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_posada.py>
            name: PosadaPage
            obj: <class 'examples.nypl_pages.page_posada.PosadaPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase PosadaPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_posada.py>
            name: PosadaTest
            obj: <class 'examples.nypl_tests.test_posada.PosadaTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase PosadaTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_posada.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_posada.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_posada.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase PosadaPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase PosadaPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase PosadaPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_posada.py::PosadaPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_posada.py::PosadaPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase PosadaTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase PosadaTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase PosadaTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_posada.py::PosadaTest' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_posada_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_posada_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_posada_sliders> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_posada_sliders>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_posada.py::PosadaTest' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_posada.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_press.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_press.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_press.py>
      find_module called for: examples.nypl_tests.test_press [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press.py>
            name: PressPage
            obj: <class 'examples.nypl_pages.page_press.PressPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase PressPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press.py>
            name: random
            obj: <module 'random' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/random.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press.py>
            name: PressTest
            obj: <class 'examples.nypl_tests.test_press.PressTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase PressTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_press.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_press.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_press.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase PressPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase PressPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase PressPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_press.py::PressPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_press.py::PressPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase PressTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase PressTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase PressTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_press.py::PressTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_press_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_press_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_press.py::PressTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_press.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_press_individual.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_press_individual.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_press_individual.py>
      find_module called for: examples.nypl_tests.test_press_individual [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press_individual.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_press_individual.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press_individual.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press_individual.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press_individual.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press_individual.py>
            name: PressIndividualPage
            obj: <class 'examples.nypl_pages.page_press_individual.PressIndividualPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase PressIndividualPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_press_individual.py>
            name: PressIndividualTest
            obj: <class 'examples.nypl_tests.test_press_individual.PressIndividualTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase PressIndividualTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_press_individual.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_press_individual.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_press_individual.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase PressIndividualPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase PressIndividualPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase PressIndividualPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_press_individual.py::PressIndividualPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_press_individual.py::PressIndividualPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase PressIndividualTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase PressIndividualTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase PressIndividualTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_press_individual.py::PressIndividualTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_press_individual_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_press_individual_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_press_individual.py::PressIndividualTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_press_individual.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_request_visit.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_request_visit.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_request_visit.py>
      find_module called for: examples.nypl_tests.test_request_visit [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_request_visit.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_request_visit.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_request_visit.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_request_visit.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_request_visit.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_request_visit.py>
            name: RequestVisitPage
            obj: <class 'examples.nypl_pages.page_request_visit.RequestVisitPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase RequestVisitPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_request_visit.py>
            name: random
            obj: <module 'random' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/random.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_request_visit.py>
            name: RequestVisitTest
            obj: <class 'examples.nypl_tests.test_request_visit.RequestVisitTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase RequestVisitTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_request_visit.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_request_visit.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_request_visit.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase RequestVisitPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase RequestVisitPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase RequestVisitPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_request_visit.py::RequestVisitPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_request_visit.py::RequestVisitPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase RequestVisitTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase RequestVisitTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase RequestVisitTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_request_visit.py::RequestVisitTest' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction test_request_visit_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_request_visit_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_request_visit_negative> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_request_visit_negative>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_request_visit_positive> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_request_visit_positive>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_request_visit.py::RequestVisitTest' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_request_visit.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_research.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_research.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_research.py>
      find_module called for: examples.nypl_tests.test_research [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research.py>
            name: ResearchPage
            obj: <class 'examples.nypl_pages.page_research.ResearchPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ResearchPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research.py>
            name: ResearchTest
            obj: <class 'examples.nypl_tests.test_research.ResearchTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ResearchTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_research.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_research.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_research.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ResearchPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ResearchPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ResearchPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_research.py::ResearchPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_research.py::ResearchPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ResearchTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ResearchTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ResearchTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_research.py::ResearchTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_research_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_research_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_research.py::ResearchTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_research.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_research_support.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_research_support.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_research_support.py>
      find_module called for: examples.nypl_tests.test_research_support [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research_support.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_research_support.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research_support.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research_support.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research_support.py>
            name: requests
            obj: <module 'requests' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/requests/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research_support.py>
            name: By
            obj: <class 'selenium.webdriver.common.by.By'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research_support.py>
            name: NoSuchElementException
            obj: <class 'selenium.common.exceptions.NoSuchElementException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research_support.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research_support.py>
            name: ResearchSupportPage
            obj: <class 'examples.nypl_pages.page_research_support.ResearchSupportPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ResearchSupportPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_research_support.py>
            name: ResearchSupportTest
            obj: <class 'examples.nypl_tests.test_research_support.ResearchSupportTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase ResearchSupportTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_research_support.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_research_support.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_research_support.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ResearchSupportPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ResearchSupportPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ResearchSupportPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_research_support.py::ResearchSupportPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_research_support.py::ResearchSupportPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase ResearchSupportTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase ResearchSupportTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase ResearchSupportTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_research_support.py::ResearchSupportTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_research_support_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_research_support_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_research_support.py::ResearchSupportTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_research_support.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_schwarzman.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_schwarzman.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_schwarzman.py>
      find_module called for: examples.nypl_tests.test_schwarzman [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_schwarzman.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_schwarzman.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schwarzman.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schwarzman.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schwarzman.py>
            name: NoSuchElementException
            obj: <class 'selenium.common.exceptions.NoSuchElementException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schwarzman.py>
            name: SchwarzmanPage
            obj: <class 'examples.nypl_pages.page_schwarzman.SchwarzmanPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase SchwarzmanPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schwarzman.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_schwarzman.py>
            name: Schwarzman
            obj: <class 'examples.nypl_tests.test_schwarzman.Schwarzman'>
        finish pytest_pycollect_makeitem --> <UnitTestCase Schwarzman> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_schwarzman.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase SchwarzmanPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase SchwarzmanPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase SchwarzmanPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_schwarzman.py::SchwarzmanPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_schwarzman.py::SchwarzmanPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_schwarzman.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_schwarzman.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase Schwarzman> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase Schwarzman>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase Schwarzman>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_schwarzman.py::Schwarzman' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction test_schwarzman_left_sidebar> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_schwarzman_left_sidebar>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_schwarzman_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_schwarzman_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_schwarzman_research> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_schwarzman_research>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_schwarzman.py::Schwarzman' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_schwarzman.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_adults.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_adults.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_adults.py>
      find_module called for: examples.nypl_tests.test_sf_adults [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_adults.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_adults.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_adults.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_adults.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_adults.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_adults.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_adults.py>
            name: EducationAdultsPage
            obj: <class 'examples.nypl_pages.page_sf_adults.EducationAdultsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducationAdultsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_adults.py>
            name: EducationAdultsTest
            obj: <class 'examples.nypl_tests.test_sf_adults.EducationAdultsTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducationAdultsTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_adults.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_adults.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_adults.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducationAdultsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducationAdultsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducationAdultsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_adults.py::EducationAdultsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_adults.py::EducationAdultsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducationAdultsTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducationAdultsTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducationAdultsTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_adults.py::EducationAdultsTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_education_adults_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_education_adults_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_adults.py::EducationAdultsTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_adults.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_books.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_books.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_books.py>
      find_module called for: examples.nypl_tests.test_sf_books [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_books.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_books.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_books.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_books.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_books.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_books.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_books.py>
            name: BooksPage
            obj: <class 'examples.nypl_pages.page_sf_books.BooksPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BooksPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_books.py>
            name: BooksTest
            obj: <class 'examples.nypl_tests.test_sf_books.BooksTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase BooksTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_books.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_books.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_books.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BooksPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BooksPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BooksPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_books.py::BooksPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_books.py::BooksPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase BooksTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase BooksTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase BooksTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_books.py::BooksTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_books_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_books_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_books.py::BooksTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_books.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_early_literacy.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_early_literacy.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_early_literacy.py>
      find_module called for: examples.nypl_tests.test_sf_early_literacy [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_early_literacy.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_early_literacy.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_early_literacy.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_early_literacy.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_early_literacy.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_early_literacy.py>
            name: EarlyLiteracyPage
            obj: <class 'examples.nypl_pages.page_sf_early_literacy.EarlyLiteracyPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EarlyLiteracyPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_early_literacy.py>
            name: EarlyLiteracyTest
            obj: <class 'examples.nypl_tests.test_sf_early_literacy.EarlyLiteracyTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EarlyLiteracyTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_early_literacy.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_early_literacy.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_early_literacy.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EarlyLiteracyPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EarlyLiteracyPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EarlyLiteracyPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_early_literacy.py::EarlyLiteracyPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_early_literacy.py::EarlyLiteracyPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EarlyLiteracyTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EarlyLiteracyTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EarlyLiteracyTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_early_literacy.py::EarlyLiteracyTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_early_literacy> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_early_literacy>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_early_literacy.py::EarlyLiteracyTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_early_literacy.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_education.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_education.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_education.py>
      find_module called for: examples.nypl_tests.test_sf_education [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_education.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_education.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_education.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_education.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_education.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_education.py>
            name: EducationPage
            obj: <class 'examples.nypl_pages.page_sf_education.EducationPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducationPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_education.py>
            name: EducationTest
            obj: <class 'examples.nypl_tests.test_sf_education.EducationTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducationTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_education.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_education.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_education.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducationPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducationPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducationPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_education.py::EducationPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_education.py::EducationPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducationTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducationTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducationTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_education.py::EducationTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_education_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_education_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_education.py::EducationTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_education.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_educators.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_educators.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_educators.py>
      find_module called for: examples.nypl_tests.test_sf_educators [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_educators.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_educators.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_educators.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_educators.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_educators.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_educators.py>
            name: EducatorsPage
            obj: <class 'examples.nypl_pages.page_sf_educators.EducatorsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducatorsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_educators.py>
            name: EducatorsTest
            obj: <class 'examples.nypl_tests.test_sf_educators.EducatorsTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducatorsTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_educators.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_educators.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_educators.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducatorsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducatorsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducatorsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_educators.py::EducatorsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_educators.py::EducatorsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducatorsTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducatorsTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducatorsTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_educators.py::EducatorsTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_educators_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_educators_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_educators.py::EducatorsTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_educators.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_events.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_events.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_events.py>
      find_module called for: examples.nypl_tests.test_sf_events [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_events.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_events.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_events.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_events.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_events.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_events.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_events.py>
            name: EventsPage
            obj: <class 'examples.nypl_pages.page_sf_events.EventsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EventsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_events.py>
            name: EventsTest
            obj: <class 'examples.nypl_tests.test_sf_events.EventsTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EventsTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_events.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_events.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_events.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EventsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EventsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EventsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_events.py::EventsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_events.py::EventsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EventsTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EventsTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EventsTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_events.py::EventsTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_events_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_events_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_events.py::EventsTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_events.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_kids.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_kids.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_kids.py>
      find_module called for: examples.nypl_tests.test_sf_kids [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_kids.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_kids.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_kids.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_kids.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_kids.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_kids.py>
            name: EducationKidsPage
            obj: <class 'examples.nypl_pages.page_sf_kids.EducationKidsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducationKidsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_kids.py>
            name: EducationKidsTest
            obj: <class 'examples.nypl_tests.test_sf_kids.EducationKidsTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducationKidsTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_kids.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_kids.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_kids.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducationKidsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducationKidsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducationKidsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_kids.py::EducationKidsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_kids.py::EducationKidsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducationKidsTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducationKidsTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducationKidsTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_kids.py::EducationKidsTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_education_kids_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_education_kids_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_kids.py::EducationKidsTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_kids.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_new_arrivals.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_new_arrivals.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_new_arrivals.py>
      find_module called for: examples.nypl_tests.test_sf_new_arrivals [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_new_arrivals.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_new_arrivals.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_new_arrivals.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_new_arrivals.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_new_arrivals.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_new_arrivals.py>
            name: NewArrivalsPage
            obj: <class 'examples.nypl_pages.page_sf_new_arrivals.NewArrivalsPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NewArrivalsPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_new_arrivals.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_new_arrivals.py>
            name: NewArrivals
            obj: <class 'examples.nypl_tests.test_sf_new_arrivals.NewArrivals'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NewArrivals> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_new_arrivals.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_new_arrivals.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_new_arrivals.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase NewArrivalsPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NewArrivalsPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NewArrivalsPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_new_arrivals.py::NewArrivalsPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_new_arrivals.py::NewArrivalsPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase NewArrivals> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NewArrivals>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NewArrivals>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_new_arrivals.py::NewArrivals' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_new_arrivals> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_new_arrivals>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_new_arrivals.py::NewArrivals' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_new_arrivals.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sf_teens.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sf_teens.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sf_teens.py>
      find_module called for: examples.nypl_tests.test_sf_teens [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_teens.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_sf_teens.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_teens.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_teens.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_teens.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_teens.py>
            name: EducationTeensPage
            obj: <class 'examples.nypl_pages.page_sf_teens.EducationTeensPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducationTeensPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sf_teens.py>
            name: EducationTeensTest
            obj: <class 'examples.nypl_tests.test_sf_teens.EducationTeensTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase EducationTeensTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_teens.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_teens.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_teens.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducationTeensPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducationTeensPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducationTeensPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_teens.py::EducationTeensPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_teens.py::EducationTeensPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase EducationTeensTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase EducationTeensTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase EducationTeensTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_sf_teens.py::EducationTeensTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_education_teens_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_education_teens_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_teens.py::EducationTeensTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_sf_teens.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_snfl.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_snfl.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_snfl.py>
      find_module called for: examples.nypl_tests.test_snfl [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl.py>
            name: SnflPage
            obj: <class 'examples.nypl_pages.page_snfl.SnflPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase SnflPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl.py>
            name: SnflTest
            obj: <class 'examples.nypl_tests.test_snfl.SnflTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase SnflTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_snfl.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_snfl.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_snfl.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase SnflPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase SnflPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase SnflPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_snfl.py::SnflPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_snfl.py::SnflPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase SnflTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase SnflTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase SnflTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_snfl.py::SnflTest' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction test_snfl_explore> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_snfl_explore>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_snfl_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_snfl_main>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_snfl_read> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_snfl_read>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_snfl.py::SnflTest' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_snfl.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_snfl_teen.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_snfl_teen.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_snfl_teen.py>
      find_module called for: examples.nypl_tests.test_snfl_teen [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl_teen.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_snfl_teen.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl_teen.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl_teen.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl_teen.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl_teen.py>
            name: SnflTeenPage
            obj: <class 'examples.nypl_pages.page_snfl_teen.SnflTeenPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase SnflTeenPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_snfl_teen.py>
            name: SnflTeenTest
            obj: <class 'examples.nypl_tests.test_snfl_teen.SnflTeenTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase SnflTeenTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_snfl_teen.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_snfl_teen.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_snfl_teen.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase SnflTeenPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase SnflTeenPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase SnflTeenPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_snfl_teen.py::SnflTeenPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_snfl_teen.py::SnflTeenPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase SnflTeenTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase SnflTeenTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase SnflTeenTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_snfl_teen.py::SnflTeenTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_snfl_teen_main> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_snfl_teen_main>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_snfl_teen.py::SnflTeenTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_snfl_teen.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_speakout.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_speakout.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_speakout.py>
      find_module called for: examples.nypl_tests.test_speakout [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_speakout.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_speakout.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_speakout.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_speakout.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_speakout.py>
            name: pytest
            obj: <module 'pytest' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_speakout.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_speakout.py>
            name: SpeakoutPage
            obj: <class 'examples.nypl_pages.page_speakout.SpeakoutPage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase SpeakoutPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_speakout.py>
            name: LibraryCard
            obj: <class 'examples.nypl_tests.test_speakout.LibraryCard'>
        finish pytest_pycollect_makeitem --> <UnitTestCase LibraryCard> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_speakout.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_speakout.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_speakout.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase SpeakoutPage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase SpeakoutPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase SpeakoutPage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_speakout.py::SpeakoutPage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_speakout.py::SpeakoutPage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase LibraryCard> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase LibraryCard>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase LibraryCard>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_speakout.py::LibraryCard' lenresult=2 outcome='passed'> [hook]
    genitems <TestCaseFunction test_speakout_newyork> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_speakout_newyork>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction test_speakout_non_newyork> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_speakout_non_newyork>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_speakout.py::LibraryCard' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_speakout.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_world_literature.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_world_literature.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_world_literature.py>
      find_module called for: examples.nypl_tests.test_world_literature [assertion]
      matched test file '/Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_world_literature.py' [assertion]
      found cached rewritten pyc for /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests/test_world_literature.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_world_literature.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_world_literature.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_world_literature.py>
            name: NyplUtils
            obj: <class 'examples.nypl_utility.utility.NyplUtils'>
        finish pytest_pycollect_makeitem --> <UnitTestCase NyplUtils> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_world_literature.py>
            name: WorldLiteraturePage
            obj: <class 'examples.nypl_pages.page_world_litetature.WorldLiteraturePage'>
        finish pytest_pycollect_makeitem --> <UnitTestCase WorldLiteraturePage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_world_literature.py>
            name: WorldLiteratureTest
            obj: <class 'examples.nypl_tests.test_world_literature.WorldLiteratureTest'>
        finish pytest_pycollect_makeitem --> <UnitTestCase WorldLiteratureTest> [hook]
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_world_literature.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase NyplUtils> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase NyplUtils>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_world_literature.py::NyplUtils' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_world_literature.py::NyplUtils' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase WorldLiteraturePage> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase WorldLiteraturePage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase WorldLiteraturePage>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_world_literature.py::WorldLiteraturePage' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_world_literature.py::WorldLiteraturePage' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase WorldLiteratureTest> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase WorldLiteratureTest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase WorldLiteratureTest>
      finish pytest_make_collect_report --> <CollectReport 'nypl_tests/test_world_literature.py::WorldLiteratureTest' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction test_world_literature> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction test_world_literature>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_world_literature.py::WorldLiteratureTest' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/test_world_literature.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'nypl_tests/__init__.py' lenresult=43 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=1 testscollected=0>
          config: <_pytest.config.Config object at 0x1090dd240>
          items: [<TestCaseFunction test_abc>, <TestCaseFunction test_articles_burney_main>, <TestCaseFunction test_articles_databases_main>, <TestCaseFunction test_articles_databases_search>, <TestCaseFunction test_articles_homework_main>, <TestCaseFunction test_billy_rose_main>, <TestCaseFunction test_best_books_adults>, <TestCaseFunction test_best_books_kids>, <TestCaseFunction test_best_books_teens>, <TestCaseFunction test_best_books_year_dropdown>, <TestCaseFunction test_125_adults>, <TestCaseFunction test_125_kids>, <TestCaseFunction test_125_teens>, <TestCaseFunction test_staff_picks_adults>, <TestCaseFunction test_staff_picks_dropdown>, <TestCaseFunction test_staff_picks_kids>, <TestCaseFunction test_staff_picks_seasons>, <TestCaseFunction test_staff_picks_teens>, <TestCaseFunction test_blog_main>, <TestCaseFunction test_featured_posts>, <TestCaseFunction test_right_side_tab>, <TestCaseFunction test_audience_filter>, <TestCaseFunction test_blog_all_main>, <TestCaseFunction test_channels_filter>, <TestCaseFunction test_divisions_filter>, <TestCaseFunction test_libraries_filter>, <TestCaseFunction test_subjects_filter>, <TestCaseFunction test_blog_channels>, <TestCaseFunction test_blog_individual>, <TestCaseFunction test_125_main>, <TestCaseFunction test_125_timeline>, <TestCaseFunction test_125_topCheckouts>, <TestCaseFunction test_dxp_pages>, <TestCaseFunction test_links>, <TestCaseFunction test_exhibitions_archived_exhibition_resources>, <TestCaseFunction test_exhibitions_community_showcases>, <TestCaseFunction test_exhibitions_main>, <TestCaseFunction test_exhibitions_online>, <TestCaseFunction test_exhibitions_past>, <TestCaseFunction test_exhibitions_upcoming>, <TestCaseFunction test_footer>, <TestCaseFunction test_give>, <TestCaseFunction test_header_main>, <TestCaseFunction test_login_catalog>, <TestCaseFunction test_research_catalog>, <TestCaseFunction test_home_page>, <TestCaseFunction test_slider>, <TestCaseFunction test_library_card_new>, <TestCaseFunction test_library_card_new>, <TestCaseFunction test_accessibility_full>, <TestCaseFunction test_accessibility_non>, <TestCaseFunction test_accessibility_partial>, <TestCaseFunction test_amenities>, <TestCaseFunction test_locations_borough>, <TestCaseFunction test_locations_filters>, <TestCaseFunction test_locations_main>, <TestCaseFunction test_locations_search_functionality>, <TestCaseFunction test_media_types>, <TestCaseFunction test_open_hours_1>, <TestCaseFunction test_open_hours_2>, <TestCaseFunction test_open_hours_3>, <TestCaseFunction test_open_hours_4>, <TestCaseFunction test_subject_specialties>, <TestCaseFunction test_posada_main>, <TestCaseFunction test_posada_sliders>, <TestCaseFunction test_press_main>, <TestCaseFunction test_press_individual_main>, <TestCaseFunction test_request_visit_main>, <TestCaseFunction test_request_visit_negative>, <TestCaseFunction test_request_visit_positive>, <TestCaseFunction test_research_main>, <TestCaseFunction test_research_support_main>, <TestCaseFunction test_schwarzman_left_sidebar>, <TestCaseFunction test_schwarzman_main>, <TestCaseFunction test_schwarzman_research>, <TestCaseFunction test_education_adults_main>, <TestCaseFunction test_books_main>, <TestCaseFunction test_early_literacy>, <TestCaseFunction test_education_main>, <TestCaseFunction test_educators_main>, <TestCaseFunction test_events_main>, <TestCaseFunction test_education_kids_main>, <TestCaseFunction test_new_arrivals>, <TestCaseFunction test_education_teens_main>, <TestCaseFunction test_snfl_explore>, <TestCaseFunction test_snfl_main>, <TestCaseFunction test_snfl_read>, <TestCaseFunction test_snfl_teen_main>, <TestCaseFunction test_speakout_newyork>, <TestCaseFunction test_speakout_non_newyork>, <TestCaseFunction test_world_literature>]
        pytest_deselected [hook]
            items: [<TestCaseFunction test_articles_burney_main>, <TestCaseFunction test_articles_databases_main>, <TestCaseFunction test_articles_databases_search>, <TestCaseFunction test_articles_homework_main>, <TestCaseFunction test_billy_rose_main>, <TestCaseFunction test_best_books_adults>, <TestCaseFunction test_best_books_kids>, <TestCaseFunction test_best_books_teens>, <TestCaseFunction test_best_books_year_dropdown>, <TestCaseFunction test_125_adults>, <TestCaseFunction test_125_kids>, <TestCaseFunction test_125_teens>, <TestCaseFunction test_staff_picks_adults>, <TestCaseFunction test_staff_picks_dropdown>, <TestCaseFunction test_staff_picks_kids>, <TestCaseFunction test_staff_picks_seasons>, <TestCaseFunction test_staff_picks_teens>, <TestCaseFunction test_blog_main>, <TestCaseFunction test_featured_posts>, <TestCaseFunction test_right_side_tab>, <TestCaseFunction test_audience_filter>, <TestCaseFunction test_blog_all_main>, <TestCaseFunction test_channels_filter>, <TestCaseFunction test_divisions_filter>, <TestCaseFunction test_libraries_filter>, <TestCaseFunction test_subjects_filter>, <TestCaseFunction test_blog_channels>, <TestCaseFunction test_blog_individual>, <TestCaseFunction test_125_main>, <TestCaseFunction test_125_timeline>, <TestCaseFunction test_125_topCheckouts>, <TestCaseFunction test_dxp_pages>, <TestCaseFunction test_links>, <TestCaseFunction test_exhibitions_archived_exhibition_resources>, <TestCaseFunction test_exhibitions_community_showcases>, <TestCaseFunction test_exhibitions_main>, <TestCaseFunction test_exhibitions_online>, <TestCaseFunction test_exhibitions_past>, <TestCaseFunction test_exhibitions_upcoming>, <TestCaseFunction test_footer>, <TestCaseFunction test_give>, <TestCaseFunction test_header_main>, <TestCaseFunction test_login_catalog>, <TestCaseFunction test_research_catalog>, <TestCaseFunction test_home_page>, <TestCaseFunction test_slider>, <TestCaseFunction test_library_card_new>, <TestCaseFunction test_library_card_new>, <TestCaseFunction test_accessibility_full>, <TestCaseFunction test_accessibility_non>, <TestCaseFunction test_accessibility_partial>, <TestCaseFunction test_amenities>, <TestCaseFunction test_locations_borough>, <TestCaseFunction test_locations_filters>, <TestCaseFunction test_locations_main>, <TestCaseFunction test_locations_search_functionality>, <TestCaseFunction test_media_types>, <TestCaseFunction test_open_hours_1>, <TestCaseFunction test_open_hours_2>, <TestCaseFunction test_open_hours_3>, <TestCaseFunction test_open_hours_4>, <TestCaseFunction test_subject_specialties>, <TestCaseFunction test_posada_main>, <TestCaseFunction test_posada_sliders>, <TestCaseFunction test_press_main>, <TestCaseFunction test_press_individual_main>, <TestCaseFunction test_request_visit_main>, <TestCaseFunction test_request_visit_negative>, <TestCaseFunction test_request_visit_positive>, <TestCaseFunction test_research_main>, <TestCaseFunction test_research_support_main>, <TestCaseFunction test_schwarzman_left_sidebar>, <TestCaseFunction test_schwarzman_main>, <TestCaseFunction test_schwarzman_research>, <TestCaseFunction test_education_adults_main>, <TestCaseFunction test_books_main>, <TestCaseFunction test_early_literacy>, <TestCaseFunction test_education_main>, <TestCaseFunction test_educators_main>, <TestCaseFunction test_events_main>, <TestCaseFunction test_education_kids_main>, <TestCaseFunction test_new_arrivals>, <TestCaseFunction test_education_teens_main>, <TestCaseFunction test_snfl_explore>, <TestCaseFunction test_snfl_main>, <TestCaseFunction test_snfl_read>, <TestCaseFunction test_snfl_teen_main>, <TestCaseFunction test_speakout_newyork>, <TestCaseFunction test_speakout_non_newyork>, <TestCaseFunction test_world_literature>]
        finish pytest_deselected --> [] [hook]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=1 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x1090dd240>
            items: [<TestCaseFunction test_abc>]
            start_path: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests
            startdir: /Users/alkimcevik/PycharmProjects/Sbase_Reno/examples/nypl_tests
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : MonkeyPatchWarning("Monkey-patching ssl after ssl has already been imported may lead to errors, including RecursionError on Python 3.6. It may also silently lead to incorrect behaviour on Python 3.7. Please monkey-patch earlier. See https://github.com/gevent/gevent/issues/1016. Modules that had direct imports (NOT patched): ['urllib3.util.ssl_ (/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/util/ssl_.py)', 'urllib3.util (/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/util/__init__.py)']. "), category : 'MonkeyPatchWarning', filename : '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/locust/__init__.py', lineno : 16, line : None}
          nodeid: 
          when: collect
          location: None
      finish pytest_warning_recorded --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session examples exitstatus=<ExitCode.OK: 0> testsfailed=1 testscollected=1>
    pytest_keyboard_interrupt [hook]
        excinfo: <ExceptionInfo Interrupted('1 error during collection') tblen=12>
    finish pytest_keyboard_interrupt --> [] [hook]
    pytest_sessionfinish [hook]
        session: <Session examples exitstatus=<ExitCode.INTERRUPTED: 2> testsfailed=1 testscollected=1>
        exitstatus: 2
      pytest_terminal_summary [hook]
          terminalreporter: <pytest_pspec.plugin.PspecTerminalReporter object at 0x10a64ffa0>
          exitstatus: 2
          config: <_pytest.config.Config object at 0x1090dd240>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments.formatters [assertion]
      early skip of rewriting module: pygments.formatters._mapping [assertion]
      early skip of rewriting module: pygments.plugin [assertion]
      early skip of rewriting module: pygments.util [assertion]
      early skip of rewriting module: pygments.formatters.terminal [assertion]
      early skip of rewriting module: pygments.formatter [assertion]
      early skip of rewriting module: pygments.styles [assertion]
      early skip of rewriting module: pygments.token [assertion]
      early skip of rewriting module: pygments.console [assertion]
      early skip of rewriting module: pygments.lexers [assertion]
      early skip of rewriting module: pygments.lexers._mapping [assertion]
      early skip of rewriting module: pygments.modeline [assertion]
      early skip of rewriting module: pygments.lexers.python [assertion]
      early skip of rewriting module: pygments.lexer [assertion]
      early skip of rewriting module: pygments.filter [assertion]
      early skip of rewriting module: pygments.filters [assertion]
      early skip of rewriting module: pygments.regexopt [assertion]
      early skip of rewriting module: pygments.unistring [assertion]
        pytest_report_teststatus [hook]
            report: <CollectReport 'nypl_tests/test_lca_locust.py' lenresult=0 outcome='failed'>
            config: <_pytest.config.Config object at 0x1090dd240>
        finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x1090dd240>
    finish pytest_unconfigure --> [] [hook]
