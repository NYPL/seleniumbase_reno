name: Production Regression v2 w

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    env:
      PY_COLORS: "1"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        python-version: ["3.10"] 

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Chrome and ChromeDriver
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable

    # Caching Step for pip dependencies
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      # Skip installation if cache was hit
      if: steps.cache-pip.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade wheel
        pip install -r requirements.txt

    - name: Install SeleniumBase
      run: |
        python setup.py install
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py
    - name: Make sure nosetests is working
      run: |
        echo "def test_2(): pass" > nothing2.py
        nosetests nothing2.py

    # NYPL tests and the rest of your steps...
    - name: Run all tests
      continue-on-error: true
      run: |
        pytest examples/nypl_tests --headless --browser=chrome --rs -v -s -n=6 --reruns=2 --reruns-delay=1

