name: Test

on:
#  schedule:
#    - cron: '0 11 * * *'  # At 11:00 AM UTC, every day
  workflow_dispatch:

jobs:
  build:
    env:
      PY_COLORS: "1"
      CATALOG_USERNAME: ${{ secrets.CATALOG_USERNAME }}
      CATALOG_PASSWORD: ${{ secrets.CATALOG_PASSWORD }}
      LCA_PASSWORD: ${{ secrets.LCA_PASSWORD }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Chrome and ChromeDriver
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt
        pip install -U seleniumbase

    - name: Run smoke tests
      id: run_tests
      continue-on-error: true
      run: |
        pytest examples/nypl_tests --spec --headless -m test --json-report --json-report-file=report.json

    - name: Parse JSON Report
      id: parse_report
      if: always()
      run: |
        echo "Parsing JSON report..."
        python -c "import json; import os; f = open('report.json'); report = json.load(f); f.close(); failed_tests = [test['nodeid'] for test in report['tests'] if test['outcome'] == 'failed']; failed_tests_str = ','.join(failed_tests); output_path = os.environ['GITHUB_OUTPUT']; gh_output = open(output_path, 'a'); gh_output.write(f'failed_tests={failed_tests_str}\\n'); gh_output.close()"

    - name: Send GitHub Action trigger data to Slack workflow
      id: slack
      if: steps.run_tests.outcome != 'success'
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "property": "DXP Reno",
            "test_repo": "https://github.com/NYPL/seleniumbase_reno/actions",
            "failed_tests": "${{ steps.parse_report.outputs.failed_tests }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

