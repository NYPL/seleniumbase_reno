name: Test

on:
#  schedule:
#    - cron: '0 11 * * *'  # At 11:00 AM UTC, every day
  workflow_dispatch:

jobs:
  build:
    env:
      PY_COLORS: "1"
      CATALOG_USERNAME: ${{ secrets.CATALOG_USERNAME }}
      CATALOG_PASSWORD: ${{ secrets.CATALOG_PASSWORD }}
      LCA_PASSWORD: ${{ secrets.LCA_PASSWORD }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Chrome and ChromeDriver
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt
        pip install -U seleniumbase

    - name: Run smoke tests
      id: run_tests
      continue-on-error: true
      run: |
        pytest examples/nypl_tests --spec --headless -m test 

    - name: Send test results to Slack
      if: always()
      run: |
        if [ "${{ steps.run_tests.outcome }}" == "success" ]; then
          STATUS="‚úÖ PASSED"
          COLOR="good"
          MESSAGE="Smoke tests completed successfully!"
        else
          STATUS="‚ùå FAILED"
          COLOR="danger"
          MESSAGE="Smoke tests failed. Please check the logs for details."
        fi
        
        PAYLOAD=$(cat <<EOF
        {
          "channel": "#smoke-test-results",
          "attachments": [
            {
              "color": "$COLOR",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üß™ Smoke Test Results"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Status:* $STATUS"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:* ${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:* ${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "$MESSAGE"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow Run"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
          ]
        }
        EOF
        )
        
        curl -X POST -H 'Content-type: application/json' \
          --data "$PAYLOAD" \
          ${{ secrets.SLACK_WEBHOOK_URL }}